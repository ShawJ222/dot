// Code generated by protoc-gen-go. DO NOT EDIT.
// source: recharge.proto

package proto

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type GetRechargeAddrRequest struct {
	DddAddr              string   `protobuf:"bytes,1,opt,name=DddAddr,proto3" json:"DddAddr,omitempty"`
	Ts                   int64    `protobuf:"varint,2,opt,name=Ts,proto3" json:"Ts,omitempty"`
	MetaData             string   `protobuf:"bytes,3,opt,name=MetaData,proto3" json:"MetaData,omitempty"`
	PubKey               []byte   `protobuf:"bytes,4,opt,name=PubKey,proto3" json:"PubKey,omitempty"`
	SignedTxHash         []byte   `protobuf:"bytes,5,opt,name=SignedTxHash,proto3" json:"SignedTxHash,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetRechargeAddrRequest) Reset()         { *m = GetRechargeAddrRequest{} }
func (m *GetRechargeAddrRequest) String() string { return proto.CompactTextString(m) }
func (*GetRechargeAddrRequest) ProtoMessage()    {}
func (*GetRechargeAddrRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_recharge_0a18e81bf7610409, []int{0}
}
func (m *GetRechargeAddrRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRechargeAddrRequest.Unmarshal(m, b)
}
func (m *GetRechargeAddrRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRechargeAddrRequest.Marshal(b, m, deterministic)
}
func (dst *GetRechargeAddrRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRechargeAddrRequest.Merge(dst, src)
}
func (m *GetRechargeAddrRequest) XXX_Size() int {
	return xxx_messageInfo_GetRechargeAddrRequest.Size(m)
}
func (m *GetRechargeAddrRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRechargeAddrRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetRechargeAddrRequest proto.InternalMessageInfo

func (m *GetRechargeAddrRequest) GetDddAddr() string {
	if m != nil {
		return m.DddAddr
	}
	return ""
}

func (m *GetRechargeAddrRequest) GetTs() int64 {
	if m != nil {
		return m.Ts
	}
	return 0
}

func (m *GetRechargeAddrRequest) GetMetaData() string {
	if m != nil {
		return m.MetaData
	}
	return ""
}

func (m *GetRechargeAddrRequest) GetPubKey() []byte {
	if m != nil {
		return m.PubKey
	}
	return nil
}

func (m *GetRechargeAddrRequest) GetSignedTxHash() []byte {
	if m != nil {
		return m.SignedTxHash
	}
	return nil
}

type GetRechargeAddrReply struct {
	EeeAddr              string   `protobuf:"bytes,1,opt,name=EeeAddr,proto3" json:"EeeAddr,omitempty"`
	Ts                   int64    `protobuf:"varint,2,opt,name=Ts,proto3" json:"Ts,omitempty"`
	MetaData             string   `protobuf:"bytes,3,opt,name=MetaData,proto3" json:"MetaData,omitempty"`
	PubKey               []byte   `protobuf:"bytes,4,opt,name=PubKey,proto3" json:"PubKey,omitempty"`
	SignedTxHash         []byte   `protobuf:"bytes,5,opt,name=SignedTxHash,proto3" json:"SignedTxHash,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetRechargeAddrReply) Reset()         { *m = GetRechargeAddrReply{} }
func (m *GetRechargeAddrReply) String() string { return proto.CompactTextString(m) }
func (*GetRechargeAddrReply) ProtoMessage()    {}
func (*GetRechargeAddrReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_recharge_0a18e81bf7610409, []int{1}
}
func (m *GetRechargeAddrReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRechargeAddrReply.Unmarshal(m, b)
}
func (m *GetRechargeAddrReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRechargeAddrReply.Marshal(b, m, deterministic)
}
func (dst *GetRechargeAddrReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRechargeAddrReply.Merge(dst, src)
}
func (m *GetRechargeAddrReply) XXX_Size() int {
	return xxx_messageInfo_GetRechargeAddrReply.Size(m)
}
func (m *GetRechargeAddrReply) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRechargeAddrReply.DiscardUnknown(m)
}

var xxx_messageInfo_GetRechargeAddrReply proto.InternalMessageInfo

func (m *GetRechargeAddrReply) GetEeeAddr() string {
	if m != nil {
		return m.EeeAddr
	}
	return ""
}

func (m *GetRechargeAddrReply) GetTs() int64 {
	if m != nil {
		return m.Ts
	}
	return 0
}

func (m *GetRechargeAddrReply) GetMetaData() string {
	if m != nil {
		return m.MetaData
	}
	return ""
}

func (m *GetRechargeAddrReply) GetPubKey() []byte {
	if m != nil {
		return m.PubKey
	}
	return nil
}

func (m *GetRechargeAddrReply) GetSignedTxHash() []byte {
	if m != nil {
		return m.SignedTxHash
	}
	return nil
}

func init() {
	proto.RegisterType((*GetRechargeAddrRequest)(nil), "proto.GetRechargeAddrRequest")
	proto.RegisterType((*GetRechargeAddrReply)(nil), "proto.GetRechargeAddrReply")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// RechargeClient is the client API for Recharge service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RechargeClient interface {
	GetRechargeAddr(ctx context.Context, in *GetRechargeAddrRequest, opts ...grpc.CallOption) (*GetRechargeAddrReply, error)
}

type rechargeClient struct {
	cc *grpc.ClientConn
}

func NewRechargeClient(cc *grpc.ClientConn) RechargeClient {
	return &rechargeClient{cc}
}

func (c *rechargeClient) GetRechargeAddr(ctx context.Context, in *GetRechargeAddrRequest, opts ...grpc.CallOption) (*GetRechargeAddrReply, error) {
	out := new(GetRechargeAddrReply)
	err := c.cc.Invoke(ctx, "/proto.Recharge/GetRechargeAddr", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RechargeServer is the server API for Recharge service.
type RechargeServer interface {
	GetRechargeAddr(context.Context, *GetRechargeAddrRequest) (*GetRechargeAddrReply, error)
}

func RegisterRechargeServer(s *grpc.Server, srv RechargeServer) {
	s.RegisterService(&_Recharge_serviceDesc, srv)
}

func _Recharge_GetRechargeAddr_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRechargeAddrRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RechargeServer).GetRechargeAddr(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Recharge/GetRechargeAddr",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RechargeServer).GetRechargeAddr(ctx, req.(*GetRechargeAddrRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Recharge_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.Recharge",
	HandlerType: (*RechargeServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetRechargeAddr",
			Handler:    _Recharge_GetRechargeAddr_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "recharge.proto",
}

func init() { proto.RegisterFile("recharge.proto", fileDescriptor_recharge_0a18e81bf7610409) }

var fileDescriptor_recharge_0a18e81bf7610409 = []byte{
	// 223 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x2b, 0x4a, 0x4d, 0xce,
	0x48, 0x2c, 0x4a, 0x4f, 0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x05, 0x53, 0x4a, 0xb3,
	0x18, 0xb9, 0xc4, 0xdc, 0x53, 0x4b, 0x82, 0xa0, 0x92, 0x8e, 0x29, 0x29, 0x45, 0x41, 0xa9, 0x85,
	0xa5, 0xa9, 0xc5, 0x25, 0x42, 0x12, 0x5c, 0xec, 0x2e, 0x29, 0x29, 0x20, 0x11, 0x09, 0x46, 0x05,
	0x46, 0x0d, 0xce, 0x20, 0x18, 0x57, 0x88, 0x8f, 0x8b, 0x29, 0xa4, 0x58, 0x82, 0x49, 0x81, 0x51,
	0x83, 0x39, 0x88, 0x29, 0xa4, 0x58, 0x48, 0x8a, 0x8b, 0xc3, 0x37, 0xb5, 0x24, 0xd1, 0x25, 0xb1,
	0x24, 0x51, 0x82, 0x19, 0xac, 0x14, 0xce, 0x17, 0x12, 0xe3, 0x62, 0x0b, 0x28, 0x4d, 0xf2, 0x4e,
	0xad, 0x94, 0x60, 0x51, 0x60, 0xd4, 0xe0, 0x09, 0x82, 0xf2, 0x84, 0x94, 0xb8, 0x78, 0x82, 0x33,
	0xd3, 0xf3, 0x52, 0x53, 0x42, 0x2a, 0x3c, 0x12, 0x8b, 0x33, 0x24, 0x58, 0xc1, 0xb2, 0x28, 0x62,
	0x4a, 0x33, 0x18, 0xb9, 0x44, 0x30, 0x1c, 0x57, 0x90, 0x53, 0x09, 0x72, 0x9a, 0x6b, 0x6a, 0x2a,
	0xb2, 0xd3, 0xa0, 0x5c, 0x7a, 0x39, 0xcd, 0x28, 0x9a, 0x8b, 0x03, 0xe6, 0x2c, 0x21, 0x7f, 0x2e,
	0x7e, 0x34, 0x57, 0x0a, 0xc9, 0x42, 0x42, 0x59, 0x0f, 0x7b, 0xd0, 0x4a, 0x49, 0xe3, 0x92, 0x2e,
	0xc8, 0xa9, 0x54, 0x62, 0x70, 0xe2, 0x71, 0xe2, 0x80, 0xc5, 0x56, 0x00, 0x63, 0x12, 0x1b, 0x58,
	0xad, 0x31, 0x20, 0x00, 0x00, 0xff, 0xff, 0x84, 0x17, 0x6f, 0x25, 0xc2, 0x01, 0x00, 0x00,
}
